- name: "Zorg ervoor dat de group 'Docker' bestaat"
  group:
    name: docker
    state: present

- name: "Zorg ervoor dat de user in de group 'Docker' & 'Sudo' zit"
  user:
    name: "{{ ansible_user }}"
    groups: sudo,docker
    append: true
    
- name: Install dependencies
  apt:
    name: "{{ item }}"
    state: latest
  loop:
    - docker.io
    - docker-compose
    - python3-pip

- name: "Zorg ervoor dat de docker service aan staat"
  service:
    name: docker
    state: started
    enabled: true

- name: "Pull de 'mysql' & 'phpmyadmin' images"
  docker_image:
    name: "{{ item }}"
    state: present
    source: pull
  loop:
    - mysql:5.7
    - phpmyadmin/phpmyadmin:latest

- name: "Bouw de 'mysql' container"
  docker_container:
    name: db
    image: mysql:5.7
    state: present
    restart: true
    networks:
      - name: nginxphp_internal
    env:
      MYSQL_ROOT_PASSWORD: "{{ mysql.mysql_root_password }}"
      MYSQL_USER: "{{ mysql.mysql_user }}"
      MYSQL_PASSWORD: "{{ mysql.mysql_user_password }}"
      MYSQL_DATABASE: "{{ mysql.mysql_database }}"
    ports:
      - "3306:3306"
    volumes:
      - dbdata:/var/lib/mysql
    restart_policy: always

- name: "Bouw de 'phpmyadmin' container"
  docker_container:
    name: phpmyadmin
    image: phpmyadmin/phpmyadmin:latest
    state: present
    env:
      PMA_HOST: db
      PMA_PORT: "3306"
      PMA_ARBITRARY: "1"
    restart: true
    networks:
      - name: nginxphp_internal
    ports:
      - "8080:80"
    restart_policy: always

- name: "Start de 'mysql & phpmyadmin' containers"
  docker_container:
    name: "{{ item }}"
    state: started
  loop:
    - db
    - phpmyadmin